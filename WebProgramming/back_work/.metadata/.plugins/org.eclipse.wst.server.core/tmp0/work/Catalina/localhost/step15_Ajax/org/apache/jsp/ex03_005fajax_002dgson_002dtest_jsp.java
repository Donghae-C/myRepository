/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.46
 * Generated at: 2025-10-01 06:55:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class ex03_005fajax_002dgson_002dtest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <h3>Ajax Gson Test</h3>\r\n");
      out.write("    <input type=\"button\" value=\"text결과\" id=\"ajaxBtn\" />\r\n");
      out.write("    <input type=\"button\" value=\"json결과\" id=\"jsonBtn\" />\r\n");
      out.write("\r\n");
      out.write("    <input type=\"button\" value=\"DTO결과\" id=\"dtoBtn\" />\r\n");
      out.write("    <input type=\"button\" value=\"List결과\" id=\"listBtn\" />\r\n");
      out.write("    <input type=\"button\" value=\"Map결과\" id=\"mapBtn\" />\r\n");
      out.write("\r\n");
      out.write("    <input type=\"button\" value=\"textJson결과\" id=\"textJsonBtn\" />\r\n");
      out.write("\r\n");
      out.write("    <hr />\r\n");
      out.write("    <div id=\"display\"></div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("      const baseURL = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"ajaxBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"ajaxBtn 누름\");\r\n");
      out.write("        try {\r\n");
      out.write("          let response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${baseURL}/ajax\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            body: new URLSearchParams({ key: \"text\" }),\r\n");
      out.write("          });\r\n");
      out.write("          if (!response.ok) throw new Error(\"text요청 실패\" + response.status);\r\n");
      out.write("          console.log(response);\r\n");
      out.write("          let result = await response.text();\r\n");
      out.write("          console.log(result);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${result}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("          console.log(err);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${err}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("      /////////////////////////////////////////////////////////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"jsonBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"jsonBtn 누름\");\r\n");
      out.write("        try {\r\n");
      out.write("          let response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${baseURL}/ajax\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            body: new URLSearchParams({ key: \"json\" }),\r\n");
      out.write("          });\r\n");
      out.write("          if (!response.ok) throw new Error(\"json요청 실패\" + response.status);\r\n");
      out.write("          console.log(response);\r\n");
      out.write("          let result = await response.json();\r\n");
      out.write("          console.log(result);\r\n");
      out.write("          let str = \"\";\r\n");
      out.write("          result.forEach((menu, index) => {\r\n");
      out.write("            str += `<input type='checkbox' name=\"menu\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${index}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${menu}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("          });\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = str;\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("          console.log(err);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${err}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"dtoBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"dtoBtn 누름\");\r\n");
      out.write("        try {\r\n");
      out.write("          let response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${baseURL}/ajax\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            body: new URLSearchParams({ key: \"dto\" }),\r\n");
      out.write("          });\r\n");
      out.write("          if (!response.ok) throw new Error(\"json요청 실패\" + response.status);\r\n");
      out.write("          console.log(response);\r\n");
      out.write("          let result = await response.json();\r\n");
      out.write("          console.log(result);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = result.id + \" | \" + result.name;\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("          console.log(err);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${err}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"listBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"listBtn 누름\");\r\n");
      out.write("        try {\r\n");
      out.write("          let response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${baseURL}/ajax\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            body: new URLSearchParams({ key: \"list\" }),\r\n");
      out.write("          });\r\n");
      out.write("          if (!response.ok) throw new Error(\"json요청 실패\" + response.status);\r\n");
      out.write("          console.log(response);\r\n");
      out.write("          let result = await response.json();\r\n");
      out.write("          console.log(result);\r\n");
      out.write("          let str = \"\";\r\n");
      out.write("          result.forEach((member, index) => {\r\n");
      out.write("            str += member.id + \" | \" + member.name + \" | \" + member.age + \" | \" + member.addr + \"<br>\";\r\n");
      out.write("          });\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = str;\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("          console.log(err);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${err}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"mapBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"ajaxBtn 누름\");\r\n");
      out.write("        try {\r\n");
      out.write("          let response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${baseURL}/ajax\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            body: new URLSearchParams({ key: \"map\" }),\r\n");
      out.write("          });\r\n");
      out.write("          if (!response.ok) throw new Error(\"json요청 실패\" + response.status);\r\n");
      out.write("          console.log(response);\r\n");
      out.write("          let result = await response.json();\r\n");
      out.write("          console.log(result);\r\n");
      out.write("          let str = \"\";\r\n");
      out.write("          str += result.message + \"<br>\";\r\n");
      out.write("          str += result.dto.id + \" | \" + result.dto.name + \" | \" + result.dto.age + \" | \" + result.dto.addr + \"<br>\";\r\n");
      out.write("\r\n");
      out.write("          result.memberList.forEach((member, index) => {\r\n");
      out.write("            str += member.id + \" | \" + member.name + \" | \" + member.age + \" | \" + member.addr + \"<br>\";\r\n");
      out.write("          });\r\n");
      out.write("          str += result.pageNo;\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = str;\r\n");
      out.write("        } catch (error) {\r\n");
      out.write("          console.log(err);\r\n");
      out.write("          document.getElementById(\"display\").innerHTML = `<h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${\"${err}\"}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>`;\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      document.getElementById(\"textJsonBtn\").addEventListener(\"click\", async () => {\r\n");
      out.write("        console.log(\"textJsonBtn 누름\");\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
